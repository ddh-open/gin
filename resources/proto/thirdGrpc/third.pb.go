// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: third.proto

package thirdGrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ThirdTencentResourceType int32

const (
	ThirdTencentResourceType_HOST  ThirdTencentResourceType = 0
	ThirdTencentResourceType_MYSQL ThirdTencentResourceType = 1
	ThirdTencentResourceType_REDIS ThirdTencentResourceType = 2
)

// Enum value maps for ThirdTencentResourceType.
var (
	ThirdTencentResourceType_name = map[int32]string{
		0: "HOST",
		1: "MYSQL",
		2: "REDIS",
	}
	ThirdTencentResourceType_value = map[string]int32{
		"HOST":  0,
		"MYSQL": 1,
		"REDIS": 2,
	}
)

func (x ThirdTencentResourceType) Enum() *ThirdTencentResourceType {
	p := new(ThirdTencentResourceType)
	*p = x
	return p
}

func (x ThirdTencentResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThirdTencentResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_third_proto_enumTypes[0].Descriptor()
}

func (ThirdTencentResourceType) Type() protoreflect.EnumType {
	return &file_third_proto_enumTypes[0]
}

func (x ThirdTencentResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThirdTencentResourceType.Descriptor instead.
func (ThirdTencentResourceType) EnumDescriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{0}
}

type RedisType int32

const (
	RedisType_Redis4Standard RedisType = 0 // Redis4.0内存版(标准架构)
	RedisType_Redis4Cluster  RedisType = 1 // Redis4.0内存版(集群架构)
)

// Enum value maps for RedisType.
var (
	RedisType_name = map[int32]string{
		0: "Redis4Standard",
		1: "Redis4Cluster",
	}
	RedisType_value = map[string]int32{
		"Redis4Standard": 0,
		"Redis4Cluster":  1,
	}
)

func (x RedisType) Enum() *RedisType {
	p := new(RedisType)
	*p = x
	return p
}

func (x RedisType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedisType) Descriptor() protoreflect.EnumDescriptor {
	return file_third_proto_enumTypes[1].Descriptor()
}

func (RedisType) Type() protoreflect.EnumType {
	return &file_third_proto_enumTypes[1]
}

func (x RedisType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedisType.Descriptor instead.
func (RedisType) EnumDescriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{1}
}

type ThirdTencentResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   ThirdTencentResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.ThirdTencentResourceType" json:"type,omitempty"`
	Ids    []string                 `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	Names  []string                 `protobuf:"bytes,3,rep,name=names,proto3" json:"names,omitempty"`
	Offset int64                    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64                    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ThirdTencentResourceRequest) Reset() {
	*x = ThirdTencentResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdTencentResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdTencentResourceRequest) ProtoMessage() {}

func (x *ThirdTencentResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdTencentResourceRequest.ProtoReflect.Descriptor instead.
func (*ThirdTencentResourceRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{0}
}

func (x *ThirdTencentResourceRequest) GetType() ThirdTencentResourceType {
	if x != nil {
		return x.Type
	}
	return ThirdTencentResourceType_HOST
}

func (x *ThirdTencentResourceRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ThirdTencentResourceRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ThirdTencentResourceRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ThirdTencentResourceRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ThirdListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Page     int64            `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize int64            `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	Counts   int64            `protobuf:"varint,4,opt,name=Counts,proto3" json:"Counts,omitempty"`
	List     []byte           `protobuf:"bytes,5,opt,name=List,proto3" json:"List,omitempty"`
}

func (x *ThirdListResponse) Reset() {
	*x = ThirdListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdListResponse) ProtoMessage() {}

func (x *ThirdListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdListResponse.ProtoReflect.Descriptor instead.
func (*ThirdListResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{1}
}

func (x *ThirdListResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ThirdListResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ThirdListResponse) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ThirdListResponse) GetCounts() int64 {
	if x != nil {
		return x.Counts
	}
	return 0
}

func (x *ThirdListResponse) GetList() []byte {
	if x != nil {
		return x.List
	}
	return nil
}

// 标准响应体
type ThirdCodeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ThirdCodeResult) Reset() {
	*x = ThirdCodeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdCodeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdCodeResult) ProtoMessage() {}

func (x *ThirdCodeResult) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdCodeResult.ProtoReflect.Descriptor instead.
func (*ThirdCodeResult) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{2}
}

func (x *ThirdCodeResult) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ThirdCodeResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CreateRedisInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId      RedisType `protobuf:"varint,1,opt,name=typeId,proto3,enum=proto.RedisType" json:"typeId,omitempty"`
	MemSize     int64     `protobuf:"varint,2,opt,name=memSize,proto3" json:"memSize,omitempty"`         // 内存容量，单位为MB， 数值需为1024的整数倍，TypeId为标准架构时，MemSize是实例总内存容量；TypeId为集群架构时，MemSize是单分片内存容量。
	Period      int64     `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`           // 购买时长，在创建包年包月实例的时候需要填写，按量计费实例填1即可，单位：月，取值范围 [1,2,3,4,5,6,7,8,9,10,11,12,24,36]。
	BillingMode int64     `protobuf:"varint,4,opt,name=billingMode,proto3" json:"billingMode,omitempty"` // 付费方式:0-按量计费，1-包年包月。
	ZoneId      int64     `protobuf:"varint,5,opt,name=zoneId,proto3" json:"zoneId,omitempty"`           // 实例所属的可用区ID，上海三区 200003，上海四区 200004
}

func (x *CreateRedisInstanceRequest) Reset() {
	*x = CreateRedisInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRedisInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRedisInstanceRequest) ProtoMessage() {}

func (x *CreateRedisInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRedisInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateRedisInstanceRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRedisInstanceRequest) GetTypeId() RedisType {
	if x != nil {
		return x.TypeId
	}
	return RedisType_Redis4Standard
}

func (x *CreateRedisInstanceRequest) GetMemSize() int64 {
	if x != nil {
		return x.MemSize
	}
	return 0
}

func (x *CreateRedisInstanceRequest) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *CreateRedisInstanceRequest) GetBillingMode() int64 {
	if x != nil {
		return x.BillingMode
	}
	return 0
}

func (x *CreateRedisInstanceRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type CreateRedisInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRedisInstanceResponse) Reset() {
	*x = CreateRedisInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRedisInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRedisInstanceResponse) ProtoMessage() {}

func (x *CreateRedisInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRedisInstanceResponse.ProtoReflect.Descriptor instead.
func (*CreateRedisInstanceResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{4}
}

type CreateMerchantApmInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId   string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	Namespace    string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	MerchantName string `protobuf:"bytes,3,opt,name=merchantName,proto3" json:"merchantName,omitempty"`
}

func (x *CreateMerchantApmInstanceRequest) Reset() {
	*x = CreateMerchantApmInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMerchantApmInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantApmInstanceRequest) ProtoMessage() {}

func (x *CreateMerchantApmInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantApmInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateMerchantApmInstanceRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMerchantApmInstanceRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateMerchantApmInstanceRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateMerchantApmInstanceRequest) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

type CreateMerchantApmInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                  *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	InstanceId              string           `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Token                   string           `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	PrivateLinkCollectorURL string           `protobuf:"bytes,4,opt,name=privateLinkCollectorURL,proto3" json:"privateLinkCollectorURL,omitempty"`
}

func (x *CreateMerchantApmInstanceResponse) Reset() {
	*x = CreateMerchantApmInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMerchantApmInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantApmInstanceResponse) ProtoMessage() {}

func (x *CreateMerchantApmInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantApmInstanceResponse.ProtoReflect.Descriptor instead.
func (*CreateMerchantApmInstanceResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{6}
}

func (x *CreateMerchantApmInstanceResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateMerchantApmInstanceResponse) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *CreateMerchantApmInstanceResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateMerchantApmInstanceResponse) GetPrivateLinkCollectorURL() string {
	if x != nil {
		return x.PrivateLinkCollectorURL
	}
	return ""
}

// DeleteMerchantLogRequest
type DeleteMerchantLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantName string `protobuf:"bytes,1,opt,name=MerchantName,proto3" json:"MerchantName,omitempty"`
	MerchantId   string `protobuf:"bytes,2,opt,name=MerchantId,proto3" json:"MerchantId,omitempty"`
}

func (x *DeleteMerchantLogRequest) Reset() {
	*x = DeleteMerchantLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMerchantLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMerchantLogRequest) ProtoMessage() {}

func (x *DeleteMerchantLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMerchantLogRequest.ProtoReflect.Descriptor instead.
func (*DeleteMerchantLogRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMerchantLogRequest) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *DeleteMerchantLogRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

// DeleteMerchantLogResponse
type DeleteMerchantLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteMerchantLogResponse) Reset() {
	*x = DeleteMerchantLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMerchantLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMerchantLogResponse) ProtoMessage() {}

func (x *DeleteMerchantLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMerchantLogResponse.ProtoReflect.Descriptor instead.
func (*DeleteMerchantLogResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteMerchantLogResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// BatchCreateClsTopicRequest
type BatchCreateClsTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogsetId     string   `protobuf:"bytes,1,opt,name=LogsetId,proto3" json:"LogsetId,omitempty"`   // 日志集id
	TopicName    []string `protobuf:"bytes,2,rep,name=TopicName,proto3" json:"TopicName,omitempty"` // topic的名称
	MerchantName string   `protobuf:"bytes,3,opt,name=MerchantName,proto3" json:"MerchantName,omitempty"`
	MerchantId   string   `protobuf:"bytes,4,opt,name=MerchantId,proto3" json:"MerchantId,omitempty"`
}

func (x *BatchCreateClsTopicRequest) Reset() {
	*x = BatchCreateClsTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateClsTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateClsTopicRequest) ProtoMessage() {}

func (x *BatchCreateClsTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateClsTopicRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateClsTopicRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{9}
}

func (x *BatchCreateClsTopicRequest) GetLogsetId() string {
	if x != nil {
		return x.LogsetId
	}
	return ""
}

func (x *BatchCreateClsTopicRequest) GetTopicName() []string {
	if x != nil {
		return x.TopicName
	}
	return nil
}

func (x *BatchCreateClsTopicRequest) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *BatchCreateClsTopicRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

// BatchCreateClsTopicResponse
type BatchCreateClsTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Topics []*TopicInfo     `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *BatchCreateClsTopicResponse) Reset() {
	*x = BatchCreateClsTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateClsTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateClsTopicResponse) ProtoMessage() {}

func (x *BatchCreateClsTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateClsTopicResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateClsTopicResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{10}
}

func (x *BatchCreateClsTopicResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BatchCreateClsTopicResponse) GetTopics() []*TopicInfo {
	if x != nil {
		return x.Topics
	}
	return nil
}

type TopicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogsetId  string `protobuf:"bytes,1,opt,name=LogsetId,proto3" json:"LogsetId,omitempty"`
	TopicId   string `protobuf:"bytes,2,opt,name=TopicId,proto3" json:"TopicId,omitempty"`
	TopicName string `protobuf:"bytes,3,opt,name=TopicName,proto3" json:"TopicName,omitempty"`
}

func (x *TopicInfo) Reset() {
	*x = TopicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicInfo) ProtoMessage() {}

func (x *TopicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicInfo.ProtoReflect.Descriptor instead.
func (*TopicInfo) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{11}
}

func (x *TopicInfo) GetLogsetId() string {
	if x != nil {
		return x.LogsetId
	}
	return ""
}

func (x *TopicInfo) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *TopicInfo) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

// LogsetDeleteRequest
type LogsetDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogsetId string `protobuf:"bytes,1,opt,name=LogsetId,proto3" json:"LogsetId,omitempty"` // 日志集id
}

func (x *LogsetDeleteRequest) Reset() {
	*x = LogsetDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsetDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsetDeleteRequest) ProtoMessage() {}

func (x *LogsetDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsetDeleteRequest.ProtoReflect.Descriptor instead.
func (*LogsetDeleteRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{12}
}

func (x *LogsetDeleteRequest) GetLogsetId() string {
	if x != nil {
		return x.LogsetId
	}
	return ""
}

// LogsetDeleteResponse
type LogsetDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	RequestId string           `protobuf:"bytes,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *LogsetDeleteResponse) Reset() {
	*x = LogsetDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsetDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsetDeleteResponse) ProtoMessage() {}

func (x *LogsetDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsetDeleteResponse.ProtoReflect.Descriptor instead.
func (*LogsetDeleteResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{13}
}

func (x *LogsetDeleteResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LogsetDeleteResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// LogsetCreateRequest
type LogsetCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogsetName string `protobuf:"bytes,1,opt,name=LogsetName,proto3" json:"LogsetName,omitempty"` // 日志集名称
}

func (x *LogsetCreateRequest) Reset() {
	*x = LogsetCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsetCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsetCreateRequest) ProtoMessage() {}

func (x *LogsetCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsetCreateRequest.ProtoReflect.Descriptor instead.
func (*LogsetCreateRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{14}
}

func (x *LogsetCreateRequest) GetLogsetName() string {
	if x != nil {
		return x.LogsetName
	}
	return ""
}

// LogsetCreateResponse
type LogsetCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	LogsetId  string           `protobuf:"bytes,2,opt,name=LogsetId,proto3" json:"LogsetId,omitempty"` // 创建的日志集id
	RequestId string           `protobuf:"bytes,3,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *LogsetCreateResponse) Reset() {
	*x = LogsetCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsetCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsetCreateResponse) ProtoMessage() {}

func (x *LogsetCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsetCreateResponse.ProtoReflect.Descriptor instead.
func (*LogsetCreateResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{15}
}

func (x *LogsetCreateResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LogsetCreateResponse) GetLogsetId() string {
	if x != nil {
		return x.LogsetId
	}
	return ""
}

func (x *LogsetCreateResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// TopicModifyRequest cls topic修改请求
// 只允许修改日志的名称和生命周期
type TopicModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId   string `protobuf:"bytes,1,opt,name=TopicId,proto3" json:"TopicId,omitempty"` // topicId
	TopicName string `protobuf:"bytes,2,opt,name=TopicName,proto3" json:"TopicName,omitempty"`
	Period    int64  `protobuf:"varint,3,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *TopicModifyRequest) Reset() {
	*x = TopicModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicModifyRequest) ProtoMessage() {}

func (x *TopicModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicModifyRequest.ProtoReflect.Descriptor instead.
func (*TopicModifyRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{16}
}

func (x *TopicModifyRequest) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *TopicModifyRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *TopicModifyRequest) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

// TopicModifyResponse cls topic 修改响应
type TopicModifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	RequestId string           `protobuf:"bytes,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"` // 唯一请求 ID，每次请求都会返回
}

func (x *TopicModifyResponse) Reset() {
	*x = TopicModifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicModifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicModifyResponse) ProtoMessage() {}

func (x *TopicModifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicModifyResponse.ProtoReflect.Descriptor instead.
func (*TopicModifyResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{17}
}

func (x *TopicModifyResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TopicModifyResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// TopicDeleteRequest cls topic删除请求
type TopicDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=TopicId,proto3" json:"TopicId,omitempty"` // topicId
}

func (x *TopicDeleteRequest) Reset() {
	*x = TopicDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicDeleteRequest) ProtoMessage() {}

func (x *TopicDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicDeleteRequest.ProtoReflect.Descriptor instead.
func (*TopicDeleteRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{18}
}

func (x *TopicDeleteRequest) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

// TopicDeleteResponse cls topic删除响应
type TopicDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	RequestId string           `protobuf:"bytes,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"` // 唯一请求 ID，每次请求都会返回
}

func (x *TopicDeleteResponse) Reset() {
	*x = TopicDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicDeleteResponse) ProtoMessage() {}

func (x *TopicDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicDeleteResponse.ProtoReflect.Descriptor instead.
func (*TopicDeleteResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{19}
}

func (x *TopicDeleteResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TopicDeleteResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// TopicCreateRequest cls topic创建请求
type TopicCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogsetId  string `protobuf:"bytes,1,opt,name=LogsetId,proto3" json:"LogsetId,omitempty"`   // 日志集id
	TopicName string `protobuf:"bytes,2,opt,name=TopicName,proto3" json:"TopicName,omitempty"` // topic的名称
}

func (x *TopicCreateRequest) Reset() {
	*x = TopicCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicCreateRequest) ProtoMessage() {}

func (x *TopicCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicCreateRequest.ProtoReflect.Descriptor instead.
func (*TopicCreateRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{20}
}

func (x *TopicCreateRequest) GetLogsetId() string {
	if x != nil {
		return x.LogsetId
	}
	return ""
}

func (x *TopicCreateRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

// TopicCreateResponse cls topic创建返回响应
type TopicCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	TopicId   string           `protobuf:"bytes,2,opt,name=TopicId,proto3" json:"TopicId,omitempty"`     // 日志主题ID
	RequestId string           `protobuf:"bytes,3,opt,name=RequestId,proto3" json:"RequestId,omitempty"` // 唯一请求 ID，每次请求都会返回
}

func (x *TopicCreateResponse) Reset() {
	*x = TopicCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicCreateResponse) ProtoMessage() {}

func (x *TopicCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicCreateResponse.ProtoReflect.Descriptor instead.
func (*TopicCreateResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{21}
}

func (x *TopicCreateResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TopicCreateResponse) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *TopicCreateResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// TopicListRequest cls topics列表请求
type TopicListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"` // 分页的偏移量，默认值为0
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // 分页单页限制数目，默认值为20，最大值100
}

func (x *TopicListRequest) Reset() {
	*x = TopicListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicListRequest) ProtoMessage() {}

func (x *TopicListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicListRequest.ProtoReflect.Descriptor instead.
func (*TopicListRequest) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{22}
}

func (x *TopicListRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TopicListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// TopicListResponse cls topics列表响应
type TopicListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     *ThirdCodeResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`          // 响应消息和状态码
	Topics     []byte           `protobuf:"bytes,2,opt,name=topics,proto3" json:"topics,omitempty"`          // 日志主题列表
	TotalCount int64            `protobuf:"varint,3,opt,name=totalCount,proto3" json:"totalCount,omitempty"` // 总数目
	RequestId  string           `protobuf:"bytes,4,opt,name=requestId,proto3" json:"requestId,omitempty"`    // 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId
}

func (x *TopicListResponse) Reset() {
	*x = TopicListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicListResponse) ProtoMessage() {}

func (x *TopicListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicListResponse.ProtoReflect.Descriptor instead.
func (*TopicListResponse) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{23}
}

func (x *TopicListResponse) GetResult() *ThirdCodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TopicListResponse) GetTopics() []byte {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *TopicListResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *TopicListResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

var File_third_proto protoreflect.FileDescriptor

var file_third_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x1b, 0x54, 0x68, 0x69, 0x72, 0x64, 0x54, 0x65,
	0x6e, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x9f, 0x01, 0x0a, 0x11, 0x54, 0x68, 0x69, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x37, 0x0a, 0x0f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xb2, 0x01, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22,
	0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x38, 0x0a, 0x17, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x52, 0x4c, 0x22, 0x5e, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x1a, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x67, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x1b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x22, 0x5f,
	0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x6f, 0x67, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c,
	0x6f, 0x67, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x31, 0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x64, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x73,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x80, 0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x67, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x64, 0x0a, 0x12, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x63, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x12, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x63, 0x0a,
	0x13, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x4e, 0x0a, 0x12, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x67, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x40, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x2a,
	0x3a, 0x0a, 0x18, 0x54, 0x68, 0x69, 0x72, 0x64, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x4f, 0x53, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x44, 0x49, 0x53, 0x10, 0x02, 0x2a, 0x32, 0x0a, 0x09, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x34, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x34, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x01, 0x32,
	0x63, 0x0a, 0x0e, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x51, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x6e, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x64, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x7e, 0x0a, 0x0a, 0x41, 0x70, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x70, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41,
	0x70, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x85, 0x05, 0x0a, 0x0a, 0x43, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x4c, 0x53, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x73, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x67, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x65,
	0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x47, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_third_proto_rawDescOnce sync.Once
	file_third_proto_rawDescData = file_third_proto_rawDesc
)

func file_third_proto_rawDescGZIP() []byte {
	file_third_proto_rawDescOnce.Do(func() {
		file_third_proto_rawDescData = protoimpl.X.CompressGZIP(file_third_proto_rawDescData)
	})
	return file_third_proto_rawDescData
}

var file_third_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_third_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_third_proto_goTypes = []interface{}{
	(ThirdTencentResourceType)(0),             // 0: proto.ThirdTencentResourceType
	(RedisType)(0),                            // 1: proto.RedisType
	(*ThirdTencentResourceRequest)(nil),       // 2: proto.ThirdTencentResourceRequest
	(*ThirdListResponse)(nil),                 // 3: proto.ThirdListResponse
	(*ThirdCodeResult)(nil),                   // 4: proto.ThirdCodeResult
	(*CreateRedisInstanceRequest)(nil),        // 5: proto.CreateRedisInstanceRequest
	(*CreateRedisInstanceResponse)(nil),       // 6: proto.CreateRedisInstanceResponse
	(*CreateMerchantApmInstanceRequest)(nil),  // 7: proto.CreateMerchantApmInstanceRequest
	(*CreateMerchantApmInstanceResponse)(nil), // 8: proto.CreateMerchantApmInstanceResponse
	(*DeleteMerchantLogRequest)(nil),          // 9: proto.DeleteMerchantLogRequest
	(*DeleteMerchantLogResponse)(nil),         // 10: proto.DeleteMerchantLogResponse
	(*BatchCreateClsTopicRequest)(nil),        // 11: proto.BatchCreateClsTopicRequest
	(*BatchCreateClsTopicResponse)(nil),       // 12: proto.BatchCreateClsTopicResponse
	(*TopicInfo)(nil),                         // 13: proto.TopicInfo
	(*LogsetDeleteRequest)(nil),               // 14: proto.LogsetDeleteRequest
	(*LogsetDeleteResponse)(nil),              // 15: proto.LogsetDeleteResponse
	(*LogsetCreateRequest)(nil),               // 16: proto.LogsetCreateRequest
	(*LogsetCreateResponse)(nil),              // 17: proto.LogsetCreateResponse
	(*TopicModifyRequest)(nil),                // 18: proto.TopicModifyRequest
	(*TopicModifyResponse)(nil),               // 19: proto.TopicModifyResponse
	(*TopicDeleteRequest)(nil),                // 20: proto.TopicDeleteRequest
	(*TopicDeleteResponse)(nil),               // 21: proto.TopicDeleteResponse
	(*TopicCreateRequest)(nil),                // 22: proto.TopicCreateRequest
	(*TopicCreateResponse)(nil),               // 23: proto.TopicCreateResponse
	(*TopicListRequest)(nil),                  // 24: proto.TopicListRequest
	(*TopicListResponse)(nil),                 // 25: proto.TopicListResponse
}
var file_third_proto_depIdxs = []int32{
	0,  // 0: proto.ThirdTencentResourceRequest.type:type_name -> proto.ThirdTencentResourceType
	4,  // 1: proto.ThirdListResponse.result:type_name -> proto.ThirdCodeResult
	1,  // 2: proto.CreateRedisInstanceRequest.typeId:type_name -> proto.RedisType
	4,  // 3: proto.CreateMerchantApmInstanceResponse.result:type_name -> proto.ThirdCodeResult
	4,  // 4: proto.DeleteMerchantLogResponse.result:type_name -> proto.ThirdCodeResult
	4,  // 5: proto.BatchCreateClsTopicResponse.result:type_name -> proto.ThirdCodeResult
	13, // 6: proto.BatchCreateClsTopicResponse.topics:type_name -> proto.TopicInfo
	4,  // 7: proto.LogsetDeleteResponse.result:type_name -> proto.ThirdCodeResult
	4,  // 8: proto.LogsetCreateResponse.result:type_name -> proto.ThirdCodeResult
	4,  // 9: proto.TopicModifyResponse.result:type_name -> proto.ThirdCodeResult
	4,  // 10: proto.TopicDeleteResponse.result:type_name -> proto.ThirdCodeResult
	4,  // 11: proto.TopicCreateResponse.result:type_name -> proto.ThirdCodeResult
	4,  // 12: proto.TopicListResponse.result:type_name -> proto.ThirdCodeResult
	2,  // 13: proto.TencentService.GetResourceList:input_type -> proto.ThirdTencentResourceRequest
	5,  // 14: proto.RedisService.CreateRedisInstance:input_type -> proto.CreateRedisInstanceRequest
	7,  // 15: proto.ApmService.CreateMerchantApmInstance:input_type -> proto.CreateMerchantApmInstanceRequest
	24, // 16: proto.ClsService.GetCLSTopicList:input_type -> proto.TopicListRequest
	22, // 17: proto.ClsService.CreateClsTopic:input_type -> proto.TopicCreateRequest
	11, // 18: proto.ClsService.BatchCreateClsTopic:input_type -> proto.BatchCreateClsTopicRequest
	9,  // 19: proto.ClsService.DeleteMerchantLog:input_type -> proto.DeleteMerchantLogRequest
	20, // 20: proto.ClsService.DeleteClsTopic:input_type -> proto.TopicDeleteRequest
	18, // 21: proto.ClsService.ModifyClsTopic:input_type -> proto.TopicModifyRequest
	16, // 22: proto.ClsService.CreateLogset:input_type -> proto.LogsetCreateRequest
	14, // 23: proto.ClsService.DeleteLogset:input_type -> proto.LogsetDeleteRequest
	3,  // 24: proto.TencentService.GetResourceList:output_type -> proto.ThirdListResponse
	6,  // 25: proto.RedisService.CreateRedisInstance:output_type -> proto.CreateRedisInstanceResponse
	8,  // 26: proto.ApmService.CreateMerchantApmInstance:output_type -> proto.CreateMerchantApmInstanceResponse
	25, // 27: proto.ClsService.GetCLSTopicList:output_type -> proto.TopicListResponse
	23, // 28: proto.ClsService.CreateClsTopic:output_type -> proto.TopicCreateResponse
	12, // 29: proto.ClsService.BatchCreateClsTopic:output_type -> proto.BatchCreateClsTopicResponse
	10, // 30: proto.ClsService.DeleteMerchantLog:output_type -> proto.DeleteMerchantLogResponse
	21, // 31: proto.ClsService.DeleteClsTopic:output_type -> proto.TopicDeleteResponse
	19, // 32: proto.ClsService.ModifyClsTopic:output_type -> proto.TopicModifyResponse
	17, // 33: proto.ClsService.CreateLogset:output_type -> proto.LogsetCreateResponse
	15, // 34: proto.ClsService.DeleteLogset:output_type -> proto.LogsetDeleteResponse
	24, // [24:35] is the sub-list for method output_type
	13, // [13:24] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_third_proto_init() }
func file_third_proto_init() {
	if File_third_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_third_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdTencentResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdCodeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRedisInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRedisInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMerchantApmInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMerchantApmInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMerchantLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMerchantLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateClsTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateClsTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsetDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsetDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsetCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsetCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicModifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_third_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_third_proto_goTypes,
		DependencyIndexes: file_third_proto_depIdxs,
		EnumInfos:         file_third_proto_enumTypes,
		MessageInfos:      file_third_proto_msgTypes,
	}.Build()
	File_third_proto = out.File
	file_third_proto_rawDesc = nil
	file_third_proto_goTypes = nil
	file_third_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TencentServiceClient is the client API for TencentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TencentServiceClient interface {
	// 腾讯云, 同步资源的接口
	GetResourceList(ctx context.Context, in *ThirdTencentResourceRequest, opts ...grpc.CallOption) (*ThirdListResponse, error)
}

type tencentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTencentServiceClient(cc grpc.ClientConnInterface) TencentServiceClient {
	return &tencentServiceClient{cc}
}

func (c *tencentServiceClient) GetResourceList(ctx context.Context, in *ThirdTencentResourceRequest, opts ...grpc.CallOption) (*ThirdListResponse, error) {
	out := new(ThirdListResponse)
	err := c.cc.Invoke(ctx, "/proto.TencentService/GetResourceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TencentServiceServer is the server API for TencentService service.
type TencentServiceServer interface {
	// 腾讯云, 同步资源的接口
	GetResourceList(context.Context, *ThirdTencentResourceRequest) (*ThirdListResponse, error)
}

// UnimplementedTencentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTencentServiceServer struct {
}

func (*UnimplementedTencentServiceServer) GetResourceList(context.Context, *ThirdTencentResourceRequest) (*ThirdListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceList not implemented")
}

func RegisterTencentServiceServer(s *grpc.Server, srv TencentServiceServer) {
	s.RegisterService(&_TencentService_serviceDesc, srv)
}

func _TencentService_GetResourceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThirdTencentResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TencentServiceServer).GetResourceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TencentService/GetResourceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TencentServiceServer).GetResourceList(ctx, req.(*ThirdTencentResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TencentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TencentService",
	HandlerType: (*TencentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetResourceList",
			Handler:    _TencentService_GetResourceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "third.proto",
}

// RedisServiceClient is the client API for RedisService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RedisServiceClient interface {
	// 创建redis实例
	CreateRedisInstance(ctx context.Context, in *CreateRedisInstanceRequest, opts ...grpc.CallOption) (*CreateRedisInstanceResponse, error)
}

type redisServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRedisServiceClient(cc grpc.ClientConnInterface) RedisServiceClient {
	return &redisServiceClient{cc}
}

func (c *redisServiceClient) CreateRedisInstance(ctx context.Context, in *CreateRedisInstanceRequest, opts ...grpc.CallOption) (*CreateRedisInstanceResponse, error) {
	out := new(CreateRedisInstanceResponse)
	err := c.cc.Invoke(ctx, "/proto.RedisService/CreateRedisInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RedisServiceServer is the server API for RedisService service.
type RedisServiceServer interface {
	// 创建redis实例
	CreateRedisInstance(context.Context, *CreateRedisInstanceRequest) (*CreateRedisInstanceResponse, error)
}

// UnimplementedRedisServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRedisServiceServer struct {
}

func (*UnimplementedRedisServiceServer) CreateRedisInstance(context.Context, *CreateRedisInstanceRequest) (*CreateRedisInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRedisInstance not implemented")
}

func RegisterRedisServiceServer(s *grpc.Server, srv RedisServiceServer) {
	s.RegisterService(&_RedisService_serviceDesc, srv)
}

func _RedisService_CreateRedisInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRedisInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RedisServiceServer).CreateRedisInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RedisService/CreateRedisInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RedisServiceServer).CreateRedisInstance(ctx, req.(*CreateRedisInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RedisService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RedisService",
	HandlerType: (*RedisServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRedisInstance",
			Handler:    _RedisService_CreateRedisInstance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "third.proto",
}

// ApmServiceClient is the client API for ApmService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApmServiceClient interface {
	// CreateMerchantApmInstance 业务购买APM实例，调用该接口创建
	CreateMerchantApmInstance(ctx context.Context, in *CreateMerchantApmInstanceRequest, opts ...grpc.CallOption) (*CreateMerchantApmInstanceResponse, error)
}

type apmServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApmServiceClient(cc grpc.ClientConnInterface) ApmServiceClient {
	return &apmServiceClient{cc}
}

func (c *apmServiceClient) CreateMerchantApmInstance(ctx context.Context, in *CreateMerchantApmInstanceRequest, opts ...grpc.CallOption) (*CreateMerchantApmInstanceResponse, error) {
	out := new(CreateMerchantApmInstanceResponse)
	err := c.cc.Invoke(ctx, "/proto.ApmService/CreateMerchantApmInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApmServiceServer is the server API for ApmService service.
type ApmServiceServer interface {
	// CreateMerchantApmInstance 业务购买APM实例，调用该接口创建
	CreateMerchantApmInstance(context.Context, *CreateMerchantApmInstanceRequest) (*CreateMerchantApmInstanceResponse, error)
}

// UnimplementedApmServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApmServiceServer struct {
}

func (*UnimplementedApmServiceServer) CreateMerchantApmInstance(context.Context, *CreateMerchantApmInstanceRequest) (*CreateMerchantApmInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMerchantApmInstance not implemented")
}

func RegisterApmServiceServer(s *grpc.Server, srv ApmServiceServer) {
	s.RegisterService(&_ApmService_serviceDesc, srv)
}

func _ApmService_CreateMerchantApmInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMerchantApmInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApmServiceServer).CreateMerchantApmInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ApmService/CreateMerchantApmInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApmServiceServer).CreateMerchantApmInstance(ctx, req.(*CreateMerchantApmInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApmService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ApmService",
	HandlerType: (*ApmServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMerchantApmInstance",
			Handler:    _ApmService_CreateMerchantApmInstance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "third.proto",
}

// ClsServiceClient is the client API for ClsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClsServiceClient interface {
	// 获取日志主题列表
	GetCLSTopicList(ctx context.Context, in *TopicListRequest, opts ...grpc.CallOption) (*TopicListResponse, error)
	// 创建日志主题
	CreateClsTopic(ctx context.Context, in *TopicCreateRequest, opts ...grpc.CallOption) (*TopicCreateResponse, error)
	// 批量创建日志主题
	BatchCreateClsTopic(ctx context.Context, in *BatchCreateClsTopicRequest, opts ...grpc.CallOption) (*BatchCreateClsTopicResponse, error)
	// 删除商户日志集
	DeleteMerchantLog(ctx context.Context, in *DeleteMerchantLogRequest, opts ...grpc.CallOption) (*DeleteMerchantLogResponse, error)
	// 删除日志主题
	DeleteClsTopic(ctx context.Context, in *TopicDeleteRequest, opts ...grpc.CallOption) (*TopicDeleteResponse, error)
	// 修改日志主题
	ModifyClsTopic(ctx context.Context, in *TopicModifyRequest, opts ...grpc.CallOption) (*TopicModifyResponse, error)
	// 创建日志集
	CreateLogset(ctx context.Context, in *LogsetCreateRequest, opts ...grpc.CallOption) (*LogsetCreateResponse, error)
	// 删除日志集
	DeleteLogset(ctx context.Context, in *LogsetDeleteRequest, opts ...grpc.CallOption) (*LogsetDeleteResponse, error)
}

type clsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClsServiceClient(cc grpc.ClientConnInterface) ClsServiceClient {
	return &clsServiceClient{cc}
}

func (c *clsServiceClient) GetCLSTopicList(ctx context.Context, in *TopicListRequest, opts ...grpc.CallOption) (*TopicListResponse, error) {
	out := new(TopicListResponse)
	err := c.cc.Invoke(ctx, "/proto.ClsService/GetCLSTopicList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clsServiceClient) CreateClsTopic(ctx context.Context, in *TopicCreateRequest, opts ...grpc.CallOption) (*TopicCreateResponse, error) {
	out := new(TopicCreateResponse)
	err := c.cc.Invoke(ctx, "/proto.ClsService/CreateClsTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clsServiceClient) BatchCreateClsTopic(ctx context.Context, in *BatchCreateClsTopicRequest, opts ...grpc.CallOption) (*BatchCreateClsTopicResponse, error) {
	out := new(BatchCreateClsTopicResponse)
	err := c.cc.Invoke(ctx, "/proto.ClsService/BatchCreateClsTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clsServiceClient) DeleteMerchantLog(ctx context.Context, in *DeleteMerchantLogRequest, opts ...grpc.CallOption) (*DeleteMerchantLogResponse, error) {
	out := new(DeleteMerchantLogResponse)
	err := c.cc.Invoke(ctx, "/proto.ClsService/DeleteMerchantLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clsServiceClient) DeleteClsTopic(ctx context.Context, in *TopicDeleteRequest, opts ...grpc.CallOption) (*TopicDeleteResponse, error) {
	out := new(TopicDeleteResponse)
	err := c.cc.Invoke(ctx, "/proto.ClsService/DeleteClsTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clsServiceClient) ModifyClsTopic(ctx context.Context, in *TopicModifyRequest, opts ...grpc.CallOption) (*TopicModifyResponse, error) {
	out := new(TopicModifyResponse)
	err := c.cc.Invoke(ctx, "/proto.ClsService/ModifyClsTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clsServiceClient) CreateLogset(ctx context.Context, in *LogsetCreateRequest, opts ...grpc.CallOption) (*LogsetCreateResponse, error) {
	out := new(LogsetCreateResponse)
	err := c.cc.Invoke(ctx, "/proto.ClsService/CreateLogset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clsServiceClient) DeleteLogset(ctx context.Context, in *LogsetDeleteRequest, opts ...grpc.CallOption) (*LogsetDeleteResponse, error) {
	out := new(LogsetDeleteResponse)
	err := c.cc.Invoke(ctx, "/proto.ClsService/DeleteLogset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClsServiceServer is the server API for ClsService service.
type ClsServiceServer interface {
	// 获取日志主题列表
	GetCLSTopicList(context.Context, *TopicListRequest) (*TopicListResponse, error)
	// 创建日志主题
	CreateClsTopic(context.Context, *TopicCreateRequest) (*TopicCreateResponse, error)
	// 批量创建日志主题
	BatchCreateClsTopic(context.Context, *BatchCreateClsTopicRequest) (*BatchCreateClsTopicResponse, error)
	// 删除商户日志集
	DeleteMerchantLog(context.Context, *DeleteMerchantLogRequest) (*DeleteMerchantLogResponse, error)
	// 删除日志主题
	DeleteClsTopic(context.Context, *TopicDeleteRequest) (*TopicDeleteResponse, error)
	// 修改日志主题
	ModifyClsTopic(context.Context, *TopicModifyRequest) (*TopicModifyResponse, error)
	// 创建日志集
	CreateLogset(context.Context, *LogsetCreateRequest) (*LogsetCreateResponse, error)
	// 删除日志集
	DeleteLogset(context.Context, *LogsetDeleteRequest) (*LogsetDeleteResponse, error)
}

// UnimplementedClsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClsServiceServer struct {
}

func (*UnimplementedClsServiceServer) GetCLSTopicList(context.Context, *TopicListRequest) (*TopicListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCLSTopicList not implemented")
}
func (*UnimplementedClsServiceServer) CreateClsTopic(context.Context, *TopicCreateRequest) (*TopicCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateClsTopic not implemented")
}
func (*UnimplementedClsServiceServer) BatchCreateClsTopic(context.Context, *BatchCreateClsTopicRequest) (*BatchCreateClsTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchCreateClsTopic not implemented")
}
func (*UnimplementedClsServiceServer) DeleteMerchantLog(context.Context, *DeleteMerchantLogRequest) (*DeleteMerchantLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMerchantLog not implemented")
}
func (*UnimplementedClsServiceServer) DeleteClsTopic(context.Context, *TopicDeleteRequest) (*TopicDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClsTopic not implemented")
}
func (*UnimplementedClsServiceServer) ModifyClsTopic(context.Context, *TopicModifyRequest) (*TopicModifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyClsTopic not implemented")
}
func (*UnimplementedClsServiceServer) CreateLogset(context.Context, *LogsetCreateRequest) (*LogsetCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLogset not implemented")
}
func (*UnimplementedClsServiceServer) DeleteLogset(context.Context, *LogsetDeleteRequest) (*LogsetDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLogset not implemented")
}

func RegisterClsServiceServer(s *grpc.Server, srv ClsServiceServer) {
	s.RegisterService(&_ClsService_serviceDesc, srv)
}

func _ClsService_GetCLSTopicList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClsServiceServer).GetCLSTopicList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClsService/GetCLSTopicList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClsServiceServer).GetCLSTopicList(ctx, req.(*TopicListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClsService_CreateClsTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClsServiceServer).CreateClsTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClsService/CreateClsTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClsServiceServer).CreateClsTopic(ctx, req.(*TopicCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClsService_BatchCreateClsTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchCreateClsTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClsServiceServer).BatchCreateClsTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClsService/BatchCreateClsTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClsServiceServer).BatchCreateClsTopic(ctx, req.(*BatchCreateClsTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClsService_DeleteMerchantLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMerchantLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClsServiceServer).DeleteMerchantLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClsService/DeleteMerchantLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClsServiceServer).DeleteMerchantLog(ctx, req.(*DeleteMerchantLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClsService_DeleteClsTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClsServiceServer).DeleteClsTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClsService/DeleteClsTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClsServiceServer).DeleteClsTopic(ctx, req.(*TopicDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClsService_ModifyClsTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicModifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClsServiceServer).ModifyClsTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClsService/ModifyClsTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClsServiceServer).ModifyClsTopic(ctx, req.(*TopicModifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClsService_CreateLogset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogsetCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClsServiceServer).CreateLogset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClsService/CreateLogset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClsServiceServer).CreateLogset(ctx, req.(*LogsetCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClsService_DeleteLogset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogsetDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClsServiceServer).DeleteLogset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClsService/DeleteLogset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClsServiceServer).DeleteLogset(ctx, req.(*LogsetDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ClsService",
	HandlerType: (*ClsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCLSTopicList",
			Handler:    _ClsService_GetCLSTopicList_Handler,
		},
		{
			MethodName: "CreateClsTopic",
			Handler:    _ClsService_CreateClsTopic_Handler,
		},
		{
			MethodName: "BatchCreateClsTopic",
			Handler:    _ClsService_BatchCreateClsTopic_Handler,
		},
		{
			MethodName: "DeleteMerchantLog",
			Handler:    _ClsService_DeleteMerchantLog_Handler,
		},
		{
			MethodName: "DeleteClsTopic",
			Handler:    _ClsService_DeleteClsTopic_Handler,
		},
		{
			MethodName: "ModifyClsTopic",
			Handler:    _ClsService_ModifyClsTopic_Handler,
		},
		{
			MethodName: "CreateLogset",
			Handler:    _ClsService_CreateLogset_Handler,
		},
		{
			MethodName: "DeleteLogset",
			Handler:    _ClsService_DeleteLogset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "third.proto",
}
